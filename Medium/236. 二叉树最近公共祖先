# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':

        def search(currentNode):
            if not currentNode:
                return False
            
            left = search(currentNode.left)
            right = search(currentNode.right)
            mid = currentNode == p or currentNode == q

            if mid+left+right >= 2:
                self.ans = currentNode
            
            return mid or left or right
        
        search(root)

        return self.ans
