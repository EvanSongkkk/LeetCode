# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def addTwoNumbers(self, l1: ListNode, l2: ListNode) -> ListNode:
        p, q = l1, l2
        node = ListNode(0)
        r = node
        add = 0

        while(q != None or p != None):
            #if(q == None):
            #    rp, rq = p.val, 0
            #elif(p == None):
            #    rp, rq = 0, q.val
            #else:
            #    rp, rq = p.val, q.val
            rp = p.val if p else 0
            rq = q.val if q else 0                # 120ms->68ms节约时间！！！！！！！！！！
            
            res = rp+rq+add
            if(res >= 10):
                add = 1
                final = res%10
            else:
                add = 0
                final = res
            new = ListNode(final)
            r.next = new

            r = r.next
            if(q!=None): q = q.next
            if(p!=None): p = p.next

        if(add == 1):
            new = ListNode(1)
            r.next = new
            
        return node.next
